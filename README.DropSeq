

Downloaded

STAR - STAR-2.5.3a.tar.gz  ( https://github.com/alexdobin/STAR/releases )
Picard - picard.jar ( http://broadinstitute.github.io/picard/ )
Drop_seq - Drop-seq_tools-1.13-3.zip ( http://mccarrolllab.com/dropseq/ )
Mouse reference files ... GSE63472_mm10_reference_metadata.tar.gz


Converted all fastq files to unaligned bams with picard
( my script convert_fastq_files_to_bams.bash )

	java -jar $basedir/picard.jar FastqToSam \
		F1=$fastq1 \
		F2=$fastq2 \
		O=$basename.bam \
		SM=$basename


Generated STAR reference from mm10.fasta

mkdir mm10_star
~/singlecell/STAR-2.5.3a/bin/MacOSX_x86_64/STAR --genomeFastaFiles mm10.fasta  --runMode genomeGenerate --genomeDir $PWD/mm10_star --runThreadN 8 --sjdbGTFfile mm10.gtf

This seemed to do nothing for a while, but used quite a bit of the CPU.
Then started producing files.
Eventually it crashed on my laptop.

Update Amazon AMI to include needed software and reference files.



create_ec2_instance.bash --profile syryu --key ~/.aws/JakeSYRyu.pem --instance-type c4.large 
sudo yum update
wget https://github.com/alexdobin/STAR/archive/2.5.3a.tar.gz
wget https://github.com/broadinstitute/picard/releases/download/2.17.0/picard.jar
wget -O Drop-seq_tools.zip http://mccarrolllab.com/download/1276/
wget ftp://ftp.ncbi.nlm.nih.gov/geo/series/GSE63nnn/GSE63472/suppl/GSE63472_mm10_reference_metadata.tar.gz
removed java-1.7.0 and installed java-1.8.0 (picard needed)

created new ami with 12GB volume as needed more space.

c4.large (2,8,3.75)
  what():  std::bad_alloc


Need more memory. Trying m4.xlarge (4,13,16) with --volume-size 100
4 vCPU, 13 ECU, 16GB memory. Trying with 13 threads. (shoulda used 4 instead)
It seems that STAR will "continue" if the files are there. AWESOME SAUCE!

mkdir ~/working/mm10_star
cd ~/working/
~/STAR-2.5.3a/bin/Linux_x86_64/STAR --genomeFastaFiles ~/mm10/mm10.fasta  --runMode genomeGenerate --genomeDir ~/working/mm10_star --runThreadN 13 --sjdbGTFfile ~/mm10/mm10.gtf

Installed htop. STAR PEGS the processors. Runs out of memory. Then crashes! (even with just 2 threads)
Trying m4.2xlarge (8,26,32)

create_ec2_instance.bash --profile syryu --key ~/.aws/JakeSYRyu.pem --instance-type m4.2xlarge --volume-size 100 --NOT-DRY-RUN

cd ~/working/
~/STAR-2.5.3a/bin/Linux_x86_64/STAR --genomeFastaFiles ~/mm10/mm10.fasta  --runMode genomeGenerate --genomeDir ~/working/mm10_star --runThreadN 8 --sjdbGTFfile ~/mm10/mm10.gtf

Pegged 8 processors. Memory seems to have stopped at 23GB. Phew. 26GB! Ehh. 27GB!! Up and down. Still going.
Done in about an hour. Not too bad. Final reference is about 25GB so rather than store, I'll regenerate if needed.



Copy up bam file for test run.


scp -i /Users/jakewendt/.aws/JakeSYRyu.pem -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no  /Users/jakewendt/BaseSpace/Minkyung_1763-56931876/FASTQ_Generation_2017-12-13_15_11_00Z-67441595/1763_03_L003-ds.ee0be2f1073b47d083679a1b81232597/2A_S2_L003.bam ec2-user@$ip:working/




Running drop-seq's alignment script ...

mkdir ~/working/2A_S2_L003.dropseq.4000
cd ~/working/2A_S2_L003.dropseq.4000
~/Drop-seq_tools-1.13/Drop-seq_alignment.sh -g ~/working/mm10_star/ -s ~/STAR-2.5.3a/bin/Linux_x86_64/STAR -n 4000 -r ~/mm10/mm10.fasta ~/working/2A_S2_L003.bam
tar cfv - 2A_S2_L003.dropseq.4000 | gzip --best > 2A_S2_L003.dropseq.4000.tar.gz

GUESSED
-n <estimated-num-cells> : estimate of number of cells in experiment.  Required.  ( ~4000 from researcher )



This generated a lot of error bam data. (Apparently this is good.)




So Young recommends testing with ... (150GB! - 44,808 cells )
https://www.ncbi.nlm.nih.gov/geo/download/?acc=GSE63473&format=file
ftp://ftp.ncbi.nlm.nih.gov/geo/series/GSE63nnn/GSE63473/suppl/GSE63473_RAW.tar

Didn't seem to be any actual RAW data here.














----------------------------------------------------------------------







20171228

Need to do / Doing / Did ...

create_ec2_instance.bash --profile syryu --key ~/.aws/JakeSYRyu.pem --instance-type m4.2xlarge


sudo yum update
sudo yum install htop


cd
git clone https://github.com/unreno/syryu/
cd ~/syryu
git pull
ln -s Makefile.example Makefile
make install

link all DropSeq scripts, (as well as jar dir and 3rdparty dir), to ~/.local/bin/
link STAR to ~/.local/bin/

include new sequence in mm10. New name mm10a
chmod 444 ~/mm10/*
mkdir ~/mm10a/
cd ~/mm10a
cp ~/mm10/mm10.fasta mm10a.fasta
chmod +w mm10a.fasta
cat ~/syryu/misc/EGFP_SV40_polya.fasta >> mm10a.fasta
chmod -w mm10a.fasta
ln -s ~/mm10/mm10.refFlat mm10a.refFlat

And create dict using Pcardâ€™s CreateSequenceDictionary (page 3 in drop-seq cook book)? (Not sure why)
java -jar ~/picard.jar CreateSequenceDictionary R=mm10a.fasta
chmod -w mm10a.dict

update R and install libraries needed for Seurat
R
install.packages("devtools")
library(devtools)
install.packages("httpuv")
install.packages("igraph")
install_github("igraph/rigraph")
install.packages("Seurat")

Had to manually edit "sudo vi /usr/lib64/R/etc/Makeconf"
	and copy 4 lines like CXX1X* to CXX11*

Still didn't work.
cd /usr/lib64/R/etc/; sudo cp Makeconf.rpmnew Makeconf


Create New AMI with syryu script installed
sudo halt





Create new mm10a.gtf???? How? Needed?



create_ec2_instance.bash --profile syryu --key ~/.aws/JakeSYRyu.pem --instance-type m4.2xlarge --volume-size 100


ip=$( aws --profile syryu ec2 describe-instances --query 'Reservations[0].Instances[0].PublicIpAddress' --instance-ids i-07b8dd50baee3a6cd | tr -d '"' )
echo $ip
ssh -i /Users/jakewendt/.aws/JakeSYRyu.pem -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no ec2-user@$ip


create STAR reference for mm10a (with mm10 gtf, not sure if will work)
cd ~/working/
mkdir -p ~/working/mm10a_star
STAR --genomeFastaFiles ~/mm10a/mm10a.fasta  --runMode genomeGenerate --genomeDir ~/working/mm10a_star --runThreadN 8 --sjdbGTFfile ~/mm10/mm10.gtf
mkdir -p ~/working/dropseq
mv ~/working/Log.out ~/working/dropseq/star_mm10a_creation.log




Upload data
scp -i /Users/jakewendt/.aws/JakeSYRyu.pem -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no  /Users/jakewendt/BaseSpace/Minkyung_1763-56931876/FASTQ*/*/*.bam ec2-user@$ip:working/



RUN DATA

ssh -i /Users/jakewendt/.aws/JakeSYRyu.pem -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no ec2-user@$ip
drop_seq.bash ~/working/*bam > drop_seq.log 2>&1 &



Download results
rsync --archive --verbose --compress --rsh "ssh -i /Users/jakewendt/.aws/JakeSYRyu.pem" --progress --delete ec2-user@$ip:working/dropseq/ ./









